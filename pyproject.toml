[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "flux-mcp"
version = "0.1.0"
description = "MCP Server for FLUX.1-dev image generation with auto-unload"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "tehw0lf"}
]
keywords = ["mcp", "flux", "image-generation", "ai", "diffusion"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.0.0",
    "diffusers>=0.30.0",
    "transformers>=4.44.0",
    "accelerate>=0.34.0",
    "torch>=2.4.0",
    "python-dotenv>=1.0.0",
    "sentencepiece>=0.2.0",
    "protobuf>=5.0.0",
    "click>=8.3.0",
    "rich>=14.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "ruff>=0.6.0",
]

[project.scripts]
flux = "flux_mcp.cli:main"
flux-mcp = "flux_mcp.server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/flux_mcp"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[dependency-groups]
dev = [
    "ruff>=0.14.2",
]
